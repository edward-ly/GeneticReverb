function save_irs(plugin, sampleRate)
% SAVE_IRS Save current impulse responses in plugin to file
%
% Input arguments:
% plugin = plugin object containing IRs and IR properties
% sampleRate = sample rate of plugin
%
  % Require all arguments
  if nargin < 2, error('Not enough input arguments.'); end

  % =========================================================================

  if plugin.NUM_SAMPLES == 22500
    irData = horzcat( ...
      plugin.pFIRFilterLeft22500.Numerator', ...
      plugin.pFIRFilterRight22500.Numerator');
  elseif plugin.NUM_SAMPLES == 45000
    irData = horzcat( ...
      plugin.pFIRFilterLeft45000.Numerator', ...
      plugin.pFIRFilterRight45000.Numerator');
  elseif plugin.NUM_SAMPLES == 90000
    irData = horzcat( ...
      plugin.pFIRFilterLeft90000.Numerator', ...
      plugin.pFIRFilterRight90000.Numerator');
  elseif plugin.NUM_SAMPLES == 180000
    irData = horzcat( ...
      plugin.pFIRFilterLeft180000.Numerator', ...
      plugin.pFIRFilterRight180000.Numerator');
  elseif plugin.NUM_SAMPLES == 360000
    irData = horzcat( ...
      plugin.pFIRFilterLeft360000.Numerator', ...
      plugin.pFIRFilterRight360000.Numerator');
  elseif plugin.NUM_SAMPLES == 720000
    irData = horzcat( ...
      plugin.pFIRFilterLeft720000.Numerator', ...
      plugin.pFIRFilterRight720000.Numerator');
  elseif plugin.NUM_SAMPLES == 1440000
    irData = horzcat( ...
      plugin.pFIRFilterLeft1440000.Numerator', ...
      plugin.pFIRFilterRight1440000.Numerator');
  elseif plugin.NUM_SAMPLES == 2880000
    irData = horzcat( ...
      plugin.pFIRFilterLeft2880000.Numerator', ...
      plugin.pFIRFilterRight2880000.Numerator');
  else
    return
  end

  % Save IR parameter values and random ID number to file name
  numChannels = '1ch';
  if plugin.STEREO, numChannels = '2ch'; end
  id = randi([intmin('uint32'), intmax('uint32')], 'uint32');

  irFileName = [plugin.SAVE_IR_PATH 'ir_' ...
    'T' sprintf('%.3f', plugin.T60)      '_' ...
    'E' sprintf('%.3f%%', plugin.EDT)    '_' ...
    'C' sprintf('%.3f', plugin.C80)      '_' ...
    'W' sprintf('%.3f', plugin.WARMTH)   '_' ...
    'PL' sprintf('%.3f', plugin.L_DELAY) '_' ...
    'PR' sprintf('%.3f', plugin.R_DELAY) '_' ...
    numChannels '_' ...
    sprintf('%.0f', sampleRate) 'Hz_' ...
    sprintf('%010u', id) '.bin'];

  % Write to binary file ('audiowrite' function currently not
  % supported for code generation)
  fileID = fopen(irFileName, 'w');
  fwrite(fileID, irData, 'double');
  fclose(fileID);

  % audiowrite(irFileName, irData, sampleRate);
end
